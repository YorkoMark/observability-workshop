<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>6. O11y - Distributed Tracing for modern applications on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v4.65/tko/session-6/index.html</link><description>Recent content in 6. O11y - Distributed Tracing for modern applications on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v4.65/tko/session-6/index.xml" rel="self" type="application/rss+xml"/><item><title>6. O11y - Distributed Tracing for modern applications</title><link>https://splunk.github.io/observability-workshop/v4.65/tko/session-6/lab1/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.65/tko/session-6/lab1/index.html</guid><description>Set Environment Variables Environment Variables:
Using nano edit .env in javashop-otel directory
nano .env SHOP_USER=&amp;lt;your_name&amp;gt; SPLUNK_ACCESS_TOKEN=&amp;lt;your_token&amp;gt; SPLUNK_REALM=&amp;lt;your_realm&amp;gt; Save in nano
CTRL-O ENTER
Exit nano
CTRL-X
Build and Deploy Application Let&amp;rsquo;s get started by building and deploying our Application, the Buttercup Instrument Shop. Run the commands below to begin and start reading ahead as your traces are coming up !
cd javashop-otel ./BuildAndDeploy.sh Users and Workflows As we go through this workshop we will be switching roles from SRE to Developer.</description></item><item><title>Build a Distributed Trace in Lambda</title><link>https://splunk.github.io/observability-workshop/v4.65/tko/session-6/lab2/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.65/tko/session-6/lab2/index.html</guid><description>This lab will make a tracing superhero out of you!
In this lab you will learn how a distributed trace is constructed for a small serverless application that runs on AWS Lambda, producing and consuming your message via AWS Kinesis.
Pre-Requisites You should already have the lab content available on your EC2 lab host.
Ensure that this lab&amp;rsquo;s required folder o11y-lambda-lab is on your home directory:
Command Output cd ~ &amp;amp;&amp;amp; ls o11y-lambda-lab</description></item></channel></rss>