<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Splunk Observability Cloud Workshops – Checkの作成</title><link>https://splunk.github.io/observability-workshop/v4.52/ja/synthetics/docs/</link><description>Recent content in Checkの作成 on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v4.52/ja/synthetics/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Synthetics: Real Browser Check</title><link>https://splunk.github.io/observability-workshop/v4.52/ja/synthetics/docs/real-browser-checks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.52/ja/synthetics/docs/real-browser-checks/</guid><description>
&lt;p>このラボでは &lt;a href="https://chrome.google.com/webstore/detail/selenium-ide/mooikfkahbdckldjjndioackbalphokd?hl=en" target="_blank">Chrome Selenium IDE&lt;/a>
エクステンションを使用したSplunkデモインスタンスに対する合成トランザクションと、Splunk Synthetic Monitoring Real Browser Check (RBC)を作成します。&lt;/p>
&lt;h2 id="1-前提">1. 前提&lt;/h2>
&lt;p>&lt;a href="https://monitoring.rigor.com" target="_blank">https://monitoring.rigor.com&lt;/a>
と &lt;a href="https://optimization.rigor.com" target="_blank">https://optimization.rigor.com&lt;/a>
にログインできることを確認します。また、 &lt;strong>O11y Workshop&lt;/strong> のようなアカウントにアサインされていることを確認します。&lt;/p>
&lt;p>Splunk Synthetic Monitoring アカウントの個人情報を編集し、タイムゾーンとメール通知を編集します。Splunk Synthetic Monitoring はデフォルトで通知しますが、モニターの設定で通知をオフにすることができます。&lt;/p>
&lt;p>&lt;img src="../../images/image5.png" alt="Edit Personal Information">&lt;/p>
&lt;p>&lt;a href="https://chrome.google.com/webstore/detail/selenium-ide/mooikfkahbdckldjjndioackbalphokd?hl=en-US" target="_blank">Chrome Selenium IDE&lt;/a>
エクステンションをあなたの &lt;strong>Chrome&lt;/strong> ブラウザーに追加します。インストールした後、エクステンションをクリックすることで次の画面が表示されます。&lt;/p>
&lt;p>&lt;img src="../../images/image17.png" alt="Selenium IDE">&lt;/p>
&lt;h2 id="2-selenium-ide-の使用">2. Selenium IDE の使用&lt;/h2>
&lt;p>&lt;a href="http://splunk.o11ystore.com" target="_blank">http://splunk.o11ystore.com&lt;/a>
にアクセスし、Selenium IDEを使いウェブトランザクションを記録する準備が整いました。&lt;/p>
&lt;p>&lt;strong>Record a new test in a new project&lt;/strong> をクリックしプロジェクト名に &lt;strong>[あなたのイニシャル] - O11y Store&lt;/strong> （例：RWC - O11y Store）と入力します。&lt;/p>
&lt;p>!!! 質問 「Selenium IDEとは何ですか？」
- Selenium IDE は、オープンソースの Web 用の記録と再生のテスト自動化ツールです。
- SeleniumはWebアプリケーションをテストするためのポータブルなフレームワークです。
- Selenium はテストスクリプト言語 (Selenium IDE) を学ぶ必要なしに機能テストを作成するための再生ツールを提供します。
- C#、Groovy、Java、Perl、PHP、Python、Ruby、Scalaなどの多くの一般的なプログラミング言語でテストを記述するためのテストドメイン固有の言語（Selenese）を提供します。
- テストはほとんどの最新のWebブラウザで実行できます。
- Seleniumは、Windows、Linux、macOS上で動作します。
- Apache License 2.0の下で公開されているオープンソースソフトウェアです。&lt;/p>
&lt;p>&lt;img src="../../images/image29.png" alt="placeholder">&lt;/p>
&lt;p>Base URLに &lt;a href="http://splunk.o11ystore.com" target="_blank">http://splunk.o11ystore.com&lt;/a>
と入力します。&lt;/p>
&lt;p>&lt;img src="../../images/image11.png" alt="placeholder">&lt;/p>
&lt;p>Start Recording{: .label-button .sfx-ui-button-grey} をクリックすると &lt;a href="http://splunk.o11ystore.com" target="_blank">splunk.o11ystore.com&lt;/a>
が開かれた新しいウインドウが立ち上がります。 &lt;strong>Vintage Camera Lens&lt;/strong> をクリックし、 &lt;strong>Add To Cart&lt;/strong> をクリックし、次に &lt;strong>Place Order&lt;/strong> をクリックします。&lt;/p>
&lt;p>ウインドウを閉じ、Selenium IDEに戻りレコーディングを停止します。最後にテストケースに名前を付けます。 &lt;strong>[あなたのイニシャル] - Checkout Flow (Desktop)&lt;/strong> （例：RWC - Checkout Flow (Desktop)）&lt;/p>
&lt;p>&lt;img src="../../images/image10.png" alt="placeholder">&lt;/p>
&lt;p>あなたのSelenium IDEプロジェクトは、このようになります。&lt;/p>
&lt;p>&lt;img src="../../images/image19.png" alt="placeholder">&lt;/p>
&lt;p>再生ボタンを押してレコーディングをテストし、レコーディングがトランザクションを正常に完了することを確認してください。&lt;/p>
&lt;p>&lt;img src="../../images/image26.png" alt="Run">&lt;/p>
&lt;p>Selenium IDE プロジェクトをダウンロードフォルダに &lt;code>Workshop.side&lt;/code> という名前で保存します。&lt;/p>
&lt;p>&lt;img src="../../images/image30.png" alt="Save">&lt;/p>
&lt;p>&lt;img src="../../images/save-side-project.png" alt="Save SIDE Project">&lt;/p>
&lt;h2 id="3-real-browser-check-の作成">3. Real Browser Check の作成&lt;/h2>
&lt;p>&lt;a href="https://monitoring.rigor.com" target="_blank">https://monitoring.rigor.com&lt;/a>
からSplunk Synthetic Monitoringにログインします。 &lt;strong>REAL BROWSER&lt;/strong> をクリックし、 &lt;strong>+New&lt;/strong>{: .label-button .sfx-ui-button-blue} をクリックします。&lt;/p>
&lt;p>&lt;img src="../../images/image3.png" alt="placeholder">&lt;/p>
&lt;p>「&lt;strong>From File&lt;/strong>」をクリックしレコーディングファイルを選択し、Importをクリックします。&lt;/p>
&lt;p>&lt;img src="../../images/image1.png" alt="placeholder">&lt;/p>
&lt;p>&lt;strong>Frequency&lt;/strong> を &lt;strong>5 Minutes&lt;/strong> にセットします。&lt;/p>
&lt;p>&lt;img src="../../images/image15.png" alt="placeholder">&lt;/p>
&lt;p>各Stepをクリックし、次のように分かりやすい名前を付けてあげます。&lt;/p>
&lt;p>Step 1: Click Camera&lt;/p>
&lt;p>Step 2: Add to Cart&lt;/p>
&lt;p>Step 3: Place Order&lt;/p>
&lt;p>&lt;img src="../../images/image6.png" alt="placeholder">&lt;/p>
&lt;p>次に &lt;strong>+ Add Step&lt;/strong> をクリックし、バリデーション用のステップを追加します。これはチェックアウトが成功したかどうかを確かめるものです。&lt;/p>
&lt;p>&lt;strong>Name&lt;/strong> に &lt;strong>Confirm Order&lt;/strong> と入力し、 &lt;strong>Action&lt;/strong> を &lt;strong>Wait for text present&lt;/strong> に変更し、 &lt;strong>Value&lt;/strong> に &lt;strong>Your order is complete!&lt;/strong> と入力します。ここまでで &lt;strong>Start Url&lt;/strong> と4つのステップが作られました。&lt;/p>
&lt;p>&lt;img src="../../images/image2.png" alt="placeholder">&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;p class="alert-heading">Tip&lt;/p>
&lt;div class="alert-body">
&lt;p class="p-alert-body">
&lt;p>Step作成時には非常に強力な &lt;a href="https://help.rigor.com/hc/en-us/articles/360049442854-How-Do-I-Use-Business-Transactions" target="_blank">Business Transaction&lt;/a>
&lt;p>機能の利用もご検討ください。&lt;em>「Business Transactionとは、Real Browserスクリプト内の連続したステップをまとめたものです。これらのトランザクションは、フローの類似部分を論理的にグループ化し、ユーザーは複数のステップとページ（複数可）のパフォーマンスを1つのビジネストランザクションにまとめて表示できるようにします。&amp;quot;&lt;/em>&lt;/p>&lt;/p>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Advanced&lt;/strong> をクリックし、 &lt;strong>Viewport Size&lt;/strong> が &lt;strong>Default desktop: 1366 x 768&lt;/strong> であることを確認します。&lt;/p>
&lt;p>&lt;img src="../../images/viewport-size.png" alt="Viewport Size">&lt;/p>
&lt;p>「&lt;strong>Test&lt;/strong>」をクリックしモニター設定をテストします。テストが正常に完了した後、Step 4の「&lt;strong>AFTER&lt;/strong>」をクリックし、注文完了のスクリーンショットを取得できたことを確認してください。&lt;/p>
&lt;p>&lt;img src="../../images/image22.png" alt="placeholder">&lt;/p>
&lt;p>&lt;strong>Create&lt;/strong>{: .label-button .sfx-ui-button-blue} をクリックし、Real Browser Monitorを保存します。5から10分後にモニターが動作し、以下のようなチェック成功が表示されることを確認します。&lt;/p>
&lt;p>&lt;img src="../../images/image27.png" alt="placeholder">&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;p class="alert-heading">Tip&lt;/p>
&lt;div class="alert-body">
&lt;p class="p-alert-body">
&lt;p>&lt;strong>Run Now&lt;/strong> を実行することでモニターを即座に実行できます。&lt;/p>
&lt;p>&lt;img src="../../images/image8.png" alt="placeholder">&lt;/p>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Segment by location&lt;/strong> をクリックし、見た目の変化を確認してください。クリックすることで各ロケーションのon/offが可能です。&lt;/p>
&lt;p>!!! 問題です！
&lt;strong>Response Time&lt;/strong> が一番低いロケーションはどこでしょうか？&lt;/p>
&lt;p>&lt;img src="../../images/image9.png" alt="placeholder">&lt;/p>
&lt;p>成功した円のうちどれかをクリックし、実行結果にドリルダウンします。&lt;/p>
&lt;p>&lt;img src="../../images/image33.png" alt="placeholder">&lt;/p>
&lt;p>&lt;strong>CONFIGURE METRICS/HIDE METRICS&lt;/strong> ドロップダウンで、取得しているメトリクスを確認してみてください。&lt;/p>
&lt;p>&lt;img src="../../images/image14.png" alt="placeholder">&lt;/p>
&lt;p>ドロップダウンの &lt;strong>Page 2&lt;/strong> をクリックし、 &lt;strong>Filmstrip&lt;/strong> と &lt;strong>Waterfall Chart&lt;/strong> までスクロールダウンして結果を確認してください。&lt;/p>
&lt;p>&lt;img src="../../images/image16.png" alt="placeholder">&lt;/p>
&lt;p>&lt;img src="../../images/filmstrip.png" alt="Filmstrip">&lt;/p>
&lt;p>&lt;img src="../../images/waterfall.png" alt="Waterfall">&lt;/p>
&lt;p>&lt;strong>Click Here to Analyze with Optimization&lt;/strong> をクリックするとSplunk Synthetic Monitoring Optimizationへのログインができます。もし &lt;strong>このオプションが表示されない場合&lt;/strong> 、この &lt;a href="https://optimization.rigor.com/s/2373818/?sh=3AF8C48AADD6D3E5F5DAA8B4B7BB7F45" target="_blank">ページ&lt;/a>
にアクセスしてください。&lt;/p>
&lt;p>&lt;img src="../../images/image31.png" alt="placeholder">&lt;/p>
&lt;p>「&lt;strong>Best Practices Score&lt;/strong>」タブをクリックします。スクロールダウンし、結果を確認します。&lt;/p>
&lt;p>&lt;img src="../../images/image23.png" alt="placeholder">&lt;/p>
&lt;p>&lt;img src="../../images/best-practices.png" alt="Best Practices">&lt;/p>
&lt;p>時間をとって、結果をレビューしてみてください。他の項目もクリックしてみてください。&lt;/p>
&lt;h2 id="4-mobile-check-の作成">4. Mobile Check の作成&lt;/h2>
&lt;p>作成したRBC (Real Browser Check）をコピーします。&lt;/p>
&lt;p>&lt;img src="../../images/copy-check.png" alt="Copy Check">&lt;/p>
&lt;p>名前を &lt;strong>RWC - Checkout Flow (Tablet)&lt;/strong> のように変更します。&lt;/p>
&lt;p>&lt;img src="../../images/rename-check.png" alt="Copy Check">&lt;/p>
&lt;p>&lt;strong>Advanced&lt;/strong> タブ配下で以下の3つの設定を変更し、新しいモバイル用のRBCを作成します。&lt;/p>
&lt;p>&lt;img src="../../images/image18.png" alt="placeholder">&lt;/p>
&lt;p>新しいモニター設定をテスト＆確認します。&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;p class="alert-heading">Tip&lt;/p>
&lt;div class="alert-body">
&lt;p class="p-alert-body">
&lt;p>Step作成時には非常に強力な &lt;a href="https://help.rigor.com/hc/en-us/articles/360049442854-How-Do-I-Use-Business-Transactions" target="_blank">Business Transaction&lt;/a>
&lt;p>機能の利用もご検討ください。&lt;em>「Business Transactionとは、Real Browserスクリプト内の連続したステップをまとめたものです。これらのトランザクションは、フローの類似部分を論理的にグループ化し、ユーザーは複数のステップとページ（複数可）のパフォーマンスを1つのビジネストランザクションにまとめて表示できるようにします。&amp;quot;&lt;/em>&lt;/p>&lt;/p>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="5-リソース">5. リソース&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004652007?flash_digest=b1ef7d1a07b68d5279ee5fef8adb87fb878cf010" target="_blank">Getting Started With Selenium IDE&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://www2.rigor.com/scripting-guide" target="_blank">Splunk Synthetic Monitoring Scripting Guide&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004443988-How-Can-I-Fix-A-Broken-Script" target="_blank">How Can I Fix A Broken Script?&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction" target="_blank">Introduction to the DOM&lt;/a>
(Document Object Model (DOM)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.selenium.dev/selenium-ide/" target="_blank">Selenium IDE&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Synthetics: API Check</title><link>https://splunk.github.io/observability-workshop/v4.52/ja/synthetics/docs/api-checks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.52/ja/synthetics/docs/api-checks/</guid><description>
&lt;p>API Checkは、APIエンドポイントの機能およびパフォーマンスをチェックする柔軟な方法を提供します。APIファーストの開発へのシフトにより、フロントエンドのコア機能を提供するバックエンドサービスを監視する必要性が高まっています。複数ステップのAPIインタラクションのテストに興味がある場合でも、エンドポイントのパフォーマンスを可視化したい場合でも、API Checkは目標の達成に役立ちます。&lt;/p>
&lt;h2 id="1-グローバル変数の作成">1. グローバル変数の作成&lt;/h2>
&lt;p>API Checkを行うために使用するグローバル変数を表示します。 &lt;strong>Admin Tools&lt;/strong> の下にある &lt;strong>Global Variables&lt;/strong> をクリックします。 spotifyのAPIトランザクションを行うために使用するグローバル変数を確認してください。&lt;/p>
&lt;p>&lt;img src="../../images/global-variable.png" alt="placeholder">&lt;/p>
&lt;h2 id="2-api-check-の作成">2. API Check の作成&lt;/h2>
&lt;p>新しい API Check を作成し、&lt;code>&amp;lt;あなたのイニシャル&amp;gt;&lt;/code> の後に Splunk REST API Check をつけた名前にします （例: &lt;strong>AP - Spotify API&lt;/strong>）&lt;/p>
&lt;p>&lt;img src="../../images/new-api-check.png" alt="placeholder">&lt;/p>
&lt;p>チェックに名前を付けたら、notificationタブを開いて、どのような設定があるか眺めてみましょう。&lt;/p>
&lt;p>次に、以下のAPI Check Stepsを追加します。&lt;/p>
&lt;p>&lt;img src="../../images/api-check-steps.png" alt="placeholder">&lt;/p>
&lt;p>変数はこちらから選ぶことができます:&lt;/p>
&lt;p>&lt;img src="../../images/available-variables.png" alt="placeholder">&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004583747-API-Check-Request-Step" target="_blank">Request Step&lt;/a>
&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>リクエストステップは、あるエンドポイントにHTTPリクエストを行い、そのレスポンスからデータを取得します。他のチェックタイプとは異なり、APIチェックでは、チェックを開始するための初期URLは必要ありません。すべてのHTTPリクエストは、リクエストステップ内で設定されます。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004582607-API-Check-Extract-Step" target="_blank">Extract Step&lt;/a>
&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Extractステップでは、JSON、XML、HTML形式のデータからデータを抽出します。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>JSONからデータを抽出するには、次の3つを用意します:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>JSONを含むソース&lt;/p>
&lt;/li>
&lt;li>
&lt;p>データを抽出するためのJSONPath式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>保存先のカスタム変数名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ソースはどのようなJSONでもかまいませんが、たいていはレスポンスのBodyから取得するでしょう。レスポンスヘッダから取得することもできますし、また、カスタムの値も可能です。ソースは、整形されたJSONでなければなりません。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004743868-API-Check-Save-Step" target="_blank">Save Step&lt;/a>
&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Saveステップでは、チェックの後で再利用するためのデータを保存します。データを保存するには、ソースと保存先のカスタム変数名を指定します。ソースは、応答ヘッダを含むプリセットから選択するか、カスタム値を指定します。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>その他の使用例としては、他のステップで簡単に再利用できるように情報を追加したり、リクエストの結果を保存して別のリクエストで再利用できるようにするなどがあります。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>リクエスト変数は、リクエストが作成された後にのみ使用可能であることを覚えておくことが重要です。もし、リクエストから値を保存しようとしても、まだリクエストを行っていない場合は、空の文字列が保存されます。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004742408-API-Check-Assert-Step" target="_blank">Assert Step&lt;/a>
&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Assertステップは、2つの値に対してアサーションを行います。アサーションを行うには、2つのパラメータと、その2つの比較方法を指定します。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004742408-API-Check-Assert-Step" target="_blank">Comparisons&lt;/a>
&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>現在、&lt;strong>string（文字列）&lt;/strong>、 &lt;strong>numeric（数値）&lt;/strong>、&lt;strong>regular expression（正規表現）&lt;/strong> の3種類の比較をサポートしています。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>string&lt;/strong> と &lt;strong>numeric&lt;/strong> では、値が比較タイプに強制されます。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>reqular expression&lt;/strong> での比較の場合、最初のパラメータは文字列で、2番目のパラメータは正規表現になります。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>API Check に Splunk と API のタグを付けて SAVE します。&lt;/p>
&lt;p>&lt;img src="../../images/tags.png" alt="placeholder">&lt;/p>
&lt;h2 id="3-rest-api-checkのテスト">3. REST API Checkのテスト&lt;/h2>
&lt;p>edit configuration に戻り、ページの下にある &amp;rsquo;test&amp;rsquo; を押して、エラーがないことを確認します。&lt;/p>
&lt;p>&lt;img src="../../images/test-api-check.png" alt="placeholder">&lt;/p>
&lt;p>ウィンドウを上にスライドさせると、正常に実行された場合の詳細が表示されます&lt;/p>
&lt;p>&lt;img src="../../images/successful-run.png" alt="placeholder">&lt;/p>
&lt;p>&lt;img src="../../images/request-step.png" alt="placeholder">&lt;/p>
&lt;p>さて、モニターにもう少し機能を追加してみましょう。詳細ウィンドウを下にスライドさせ、手順5～8を追加します。&lt;/p>
&lt;p>&lt;strong>BONUS&lt;/strong>：ステップ6を使用して、以下のレスポンスがタイムリーに戻ってきたことをアサートします（1000 ms)&lt;/p>
&lt;p>&lt;img src="../../images/additional-steps.png" alt="placeholder">&lt;/p>
&lt;p>ステップを追加したら、モニターをテストして保存します。&lt;/p>
&lt;h2 id="4-リソース">4. リソース&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004817308-How-to-Create-an-API-Check" target="_blank">How to Create an API Check&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://help.rigor.com/hc/en-us/articles/115004952508-API-Check-Overview" target="_blank">API Check Overview&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://help.rigor.com/hc/en-us/articles/360049442854-How-Do-I-Use-Business-Transactions" target="_blank">How Do I Use Business Transactions?&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>