<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Splunk Observability Cloud Workshops – Monitoring as Code</title><link>https://splunk.github.io/observability-workshop/v4.52/ja/imt/docs/monitoring-as-code/</link><description>Recent content in Monitoring as Code on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v4.52/ja/imt/docs/monitoring-as-code/index.xml" rel="self" type="application/rss+xml"/><item><title>Imt: Monitoring as Code</title><link>https://splunk.github.io/observability-workshop/v4.52/ja/imt/docs/monitoring-as-code/terraform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.52/ja/imt/docs/monitoring-as-code/terraform/</guid><description>
&lt;ul>
&lt;li>Terraform&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> を使用して Observability Cloud のダッシュボードとディテクターを管理します。&lt;/li>
&lt;li>Terraform のSplunk Provider&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> を初期化します&lt;/li>
&lt;li>Terraformを実行して、Splunk Terraform Provider を使用してコードからディテクターとダッシュボードを作成します。&lt;/li>
&lt;li>Terraformでディテクターやダッシュボードを削除する方法を確認します。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="1-初期設定">1. 初期設定&lt;/h2>
&lt;p>Monitoring as Codeは、infrastructure as Codeと同じアプローチを採用しています。アプリケーション、サーバー、その他のインフラコンポーネントと同じようにモニタリングを管理できます。&lt;/p>
&lt;p>Monitoring as Codeでは、可視化したり、何を監視するか定義したり、いつアラートを出すかなどを管理します。つまり、監視設定、プロセス、ルールをバージョン管理、共有、再利用することができます。&lt;/p>
&lt;p>Splunk Terraform Providerの完全なドキュメントは&lt;a href="https://registry.terraform.io/providers/splunk-terraform/signalfx/latest/docs" target="_blank">こちら&lt;/a>
にあります。&lt;/p>
&lt;p>AWS/EC2 インスタンスにログインして、&lt;code>o11y-cloud-jumpstart&lt;/code> ディレクトリに移動します&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-0" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-sh"
id="tabs-00-00-tab" data-toggle="tab" href="#tabs-00-00" role="tab"
onclick="persistLang(&amp;#34;sh&amp;#34;);"aria-controls="tabs-00-00" aria-selected="false">
Change directory
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-0-content">
&lt;div class="tab-pane fade show active"
id="tabs-00-00" role="tabpanel" aria-labelled-by="tabs-00-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">cd&lt;/span> observability-content-contrib/integration-examples/terraform-jumpstart&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>必要な環境変数は、&lt;a href="../../gdi/k3s/#2-helm%E3%81%AB%E3%82%88%E3%82%8B%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">Helmによるインストール&lt;/a>
ですでに設定されているはずです。そうでない場合は、以下の Terraform のステップで使用するために、以下の環境変数を作成してください。&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-sh"
id="tabs-01-00-tab" data-toggle="tab" href="#tabs-01-00" role="tab"
onclick="persistLang(&amp;#34;sh&amp;#34;);"aria-controls="tabs-01-00" aria-selected="false">
Environment Variables
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-1-content">
&lt;div class="tab-pane fade show active"
id="tabs-01-00" role="tabpanel" aria-labelled-by="tabs-01-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ACCESS_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;replace_with_O11y-Workshop-ACCESS_token&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">REALM&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;replace_with_splunk_realm&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Terraform を初期化し、Splunk Terraform Provider を最新版にアップグレードします。&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;p class="alert-heading">Note: SignalFx Terraform Provider のアップグレード&lt;/p>
&lt;div class="alert-body">
&lt;p class="p-alert-body">
&lt;p>Splunk Terraform Provider の新バージョンがリリースされるたびに、以下のコマンドを実行する必要があります。リリース情報は &lt;a href="https://github.com/splunk-terraform/terraform-provider-signalfx/releases" target="_blank">GitHub&lt;/a>
&lt;p>で確認できます。&lt;/p>&lt;/p>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-sh"
id="tabs-03-00-tab" data-toggle="tab" href="#tabs-03-00" role="tab"
onclick="persistLang(&amp;#34;sh&amp;#34;);"aria-controls="tabs-03-00" aria-selected="false">
Initialise Terraform
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link persistLang-text"
id="tabs-03-01-tab" data-toggle="tab" href="#tabs-03-01" role="tab"
onclick="persistLang(&amp;#34;text&amp;#34;);"aria-controls="tabs-03-01" aria-selected="false">
Initialise Output
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-3-content">
&lt;div class="tab-pane fade show active"
id="tabs-03-00" role="tabpanel" aria-labelled-by="tabs-03-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>terraform init -upgrade&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-03-01" role="tabpanel" aria-labelled-by="tabs-03-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span> Upgrading modules...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - aws in modules/aws
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - azure in modules/azure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - docker in modules/docker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - gcp in modules/gcp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - host in modules/host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kafka in modules/kafka
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - kubernetes in modules/kubernetes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - parent_child_dashboard in modules/dashboards/parent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - pivotal in modules/pivotal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - rum_and_synthetics_dashboard in modules/dashboards/rum_and_synthetics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - usage_dashboard in modules/dashboards/usage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Initializing the backend...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Initializing provider plugins...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - Finding latest version of splunk-terraform/signalfx...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - Installing splunk-terraform/signalfx v6.20.0...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - Installed splunk-terraform/signalfx v6.20.0 (self-signed, key ID CE97B6074989F138)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Partner and community providers are signed by their developers.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> If you&amp;#39;d like to know more about provider signing, you can read about it here:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> https://www.terraform.io/docs/cli/plugins/signing.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Terraform has created a lock file .terraform.lock.hcl to record the provider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selections it made above. Include this file in your version control repository
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> so that Terraform can guarantee to make the same selections by default when
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> you run &amp;#34;terraform init&amp;#34; in the future.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Terraform has been successfully initialized!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> You may now begin working with Terraform. Try running &amp;#34;terraform plan&amp;#34; to see
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> any changes that are required for your infrastructure. All Terraform commands
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> should now work.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> If you ever set or change modules or backend configuration for Terraform,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rerun this command to reinitialize your working directory. If you forget, other
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commands will detect it and remind you to do so if necessary.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="2-プランの作成">2. プランの作成&lt;/h2>
&lt;p>&lt;code>terraform plan&lt;/code> コマンドで、実行計画を作成します。デフォルトでは、プランの作成は以下のように構成されています。&lt;/p>
&lt;ul>
&lt;li>既に存在するリモートオブジェクトの現在の状態を読み込み、Terraform の状態が最新であることを確認します&lt;/li>
&lt;li>現在の設定を以前の状態と比較し、相違点を抽出します&lt;/li>
&lt;li>適用された場合にリモートオブジェクトと設定とを一致させるための、一連の変更アクションを提案します&lt;/li>
&lt;/ul>
&lt;p>plan コマンドだけでは、提案された変更を実際に実行はされなません。変更を適用する前に、以下のコマンドを実行して、提案された変更が期待したものと一致するかどうかを確認しましょう。&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-4" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-sh"
id="tabs-04-00-tab" data-toggle="tab" href="#tabs-04-00" role="tab"
onclick="persistLang(&amp;#34;sh&amp;#34;);"aria-controls="tabs-04-00" aria-selected="false">
Execution Plan
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link persistLang-text"
id="tabs-04-01-tab" data-toggle="tab" href="#tabs-04-01" role="tab"
onclick="persistLang(&amp;#34;text&amp;#34;);"aria-controls="tabs-04-01" aria-selected="false">
Execution Plan Output
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-4-content">
&lt;div class="tab-pane fade show active"
id="tabs-04-00" role="tabpanel" aria-labelled-by="tabs-04-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>terraform plan -var&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;access_token=&lt;/span>&lt;span style="color:#000">$ACCESS_TOKEN&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> -var&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;realm=&lt;/span>&lt;span style="color:#000">$REALM&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> -var&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sfx_prefix=[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>hostname&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">]&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-04-01" role="tabpanel" aria-labelled-by="tabs-04-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Plan: 146 to add, 0 to change, 0 to destroy.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>プランが正常に実行されれば、そのまま apply することができます。&lt;/p>
&lt;hr>
&lt;h2 id="3-プランの適用">3. プランの適用&lt;/h2>
&lt;p>&lt;code>terraform apply&lt;/code> コマンドは、上記の Terraform プランで提案されたアクションを実行します。&lt;/p>
&lt;p>この場合、新しい実行プランが自動的に作成され（&lt;code>terraform plan&lt;/code>を実行したときと同様です）、指示されたアクションを実行する前にAccess Token、Realm（プレフィックスのデフォルトは&lt;code>Splunk&lt;/code>）の提供とプランの承認を求められます。&lt;/p>
&lt;p>このワークショップでは、プレフィックスがユニークである必要があります。以下の &lt;code>terraform apply&lt;/code> を実行してください。&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-5" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-sh"
id="tabs-05-00-tab" data-toggle="tab" href="#tabs-05-00" role="tab"
onclick="persistLang(&amp;#34;sh&amp;#34;);"aria-controls="tabs-05-00" aria-selected="false">
Apply Plan
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link persistLang-text"
id="tabs-05-01-tab" data-toggle="tab" href="#tabs-05-01" role="tab"
onclick="persistLang(&amp;#34;text&amp;#34;);"aria-controls="tabs-05-01" aria-selected="false">
Apply Plan Output
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-5-content">
&lt;div class="tab-pane fade show active"
id="tabs-05-00" role="tabpanel" aria-labelled-by="tabs-05-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>terraform apply -var&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;access_token=&lt;/span>&lt;span style="color:#000">$ACCESS_TOKEN&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> -var&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;realm=&lt;/span>&lt;span style="color:#000">$REALM&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> -var&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sfx_prefix=[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>hostname&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">]&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-05-01" role="tabpanel" aria-labelled-by="tabs-05-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Apply complete! Resources: 146 added, 0 changed, 0 destroyed.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>適用が完了したら、 &lt;strong>Alerts → Detectors&lt;/strong> でディテクターが作成されたことを確認してください。ディテクターのプレフィックスには、インスタンスのホスト名が入ります。プレフィックスの値を確認するには以下を実行してください。&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-6" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-sh"
id="tabs-06-00-tab" data-toggle="tab" href="#tabs-06-00" role="tab"
onclick="persistLang(&amp;#34;sh&amp;#34;);"aria-controls="tabs-06-00" aria-selected="false">
Echo Hostname
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-6-content">
&lt;div class="tab-pane fade show active"
id="tabs-06-00" role="tabpanel" aria-labelled-by="tabs-06-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>hostname&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>新しいディテクターのリストが表示され、上から出力されたプレフィックスを検索することができます。&lt;/p>
&lt;p>&lt;img src="../../../images/detectors.png" alt="Detectors">&lt;/p>
&lt;h2 id="4-苦労して作ったもの全てを壊す">4. 苦労して作ったもの全てを壊す&lt;/h2>
&lt;p>&lt;code>terraform destroy&lt;/code> コマンドは、Terraform の設定で管理されているすべてのリモートオブジェクトを破壊する便利な方法です。&lt;/p>
&lt;p>通常、本番環境では長期保存可能なオブジェクトを破棄することはありませんが、Terraformでは開発目的で一時的なインフラを管理するために使用されることがあり、その場合は作業が終わった後に &lt;code>terraform destroy&lt;/code> を実行して、一時的なオブジェクトをすべてクリーンアップすることができます。&lt;/p>
&lt;p>それでは、ここまでで適用したダッシュボードとディテクターを全て破壊しましょう！&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-7" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-sh"
id="tabs-07-00-tab" data-toggle="tab" href="#tabs-07-00" role="tab"
onclick="persistLang(&amp;#34;sh&amp;#34;);"aria-controls="tabs-07-00" aria-selected="false">
Destroy
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link persistLang-text"
id="tabs-07-01-tab" data-toggle="tab" href="#tabs-07-01" role="tab"
onclick="persistLang(&amp;#34;text&amp;#34;);"aria-controls="tabs-07-01" aria-selected="false">
Destroy Output
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-7-content">
&lt;div class="tab-pane fade show active"
id="tabs-07-00" role="tabpanel" aria-labelled-by="tabs-07-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>terraform destroy -var&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;access_token=&lt;/span>&lt;span style="color:#000">$ACCESS_TOKEN&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> -var&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;realm=&lt;/span>&lt;span style="color:#000">$REALM&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-07-01" role="tabpanel" aria-labelled-by="tabs-07-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Destroy complete! Resources: 146 destroyed.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;em>&lt;strong>Alerts → Detectors&lt;/strong>&lt;/em> に移動して、すべてのディテクターが削除されたことを確認してください。&lt;/p>
&lt;p>&lt;img src="../../../images/destroy.png" alt="Destroyed">&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Terraform は、インフラを安全かつ効率的に構築、変更、バージョン管理するためのツールです。Terraform は、既存の一般的なサービスプロバイダーだけでなく、様々なカスタムソリューションも管理できます。&lt;/p>
&lt;p>Terraform の設定ファイルには、単一のアプリケーションまたはデータセンター全体を実行するために必要なコンポーネントをに記述します。Terraform はそれを受けて、望ましい状態に到達するために何をするかを記述した実行プランを生成し、記述されたインフラを構築するために実行します。設定が変更されても、Terraform は何が変更されたかを判断し、差分の実行プランを作成して適用することができます。&lt;/p>
&lt;p>Terraform が管理できるインフラには、計算機インスタンス、ストレージ、ネットワークなどのローレベルのコンポーネントや、DNSエントリ、SaaS機能などのハイレベルのコンポーネントが含まれます。&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>プロバイダーは、APIのインタラクションを理解し、リソースを公開する責務があります。一般的にプロバイダーは、IaaS（Alibaba Cloud、AWS、GCP、Microsoft Azure、OpenStackなど）、PaaS（Herokuなど）、またはSaaSサービス（Splunk、Terraform Cloud、DNSimple、Cloudflareなど）があります。&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>