<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Splunk Observability Cloud Workshops – 2. Getting Data In (GDI) &amp; OTEL</title><link>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/</link><description>Recent content in 2. Getting Data In (GDI) &amp; OTEL on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v4.42/tko/session-2/index.xml" rel="self" type="application/rss+xml"/><item><title>Tko: GDI - Real Time Enrichment Workshop</title><link>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/docs/intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/docs/intro/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>During this technical workshop you will learn how to:&lt;/p>
&lt;ul>
&lt;li>efficiently deploy complex environments&lt;/li>
&lt;li>capture metrics from these environments to Splunk Observability&lt;/li>
&lt;li>auto-instrument a python application&lt;/li>
&lt;li>auto-instrument a java application&lt;/li>
&lt;li>enable AlwaysOn profiling for a java application&lt;/li>
&lt;/ul>
&lt;p>In order to simplify the workshop modules, a pre-configured AWS EC2 instance is provided.&lt;/p>
&lt;p>By the end of this technical workshop you will have an approach to demonstrating metrics collection for complex environments and services and be able to describe, at a high-level, what is required to instrument an application for distributed tracing.&lt;/p></description></item><item><title>Tko: GDI - Real Time Enrichment Workshop</title><link>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/docs/getting_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/docs/getting_started/</guid><description>
&lt;p>Please note to begin the following lab, you must have gone through the following:&lt;/p>
&lt;ul>
&lt;li>Download and place the yelp dataset in /var/appdata/&lt;/li>
&lt;li>Obtain a Splunk Observability Cloud access key&lt;/li>
&lt;li>&lt;a href="https://github.com/leungsteve/realtime_enrichment" target="_blank">Clone this repository&lt;/a>
&lt;/li>
&lt;li>Access to a K8 environment (e.g. k3s on multipass) python3&lt;/li>
&lt;/ul>
&lt;p>Follow these steps if using O11y Workshop EC2 instances&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic">#note: verify yelp data files are present&lt;/span>
ll /var/appdata/yelp*
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">SPLUNK_ACCESS_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your access token&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">SPLUNK_REALM&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your realm&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ACCESS_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your access token&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">REALM&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your realm&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">clusterName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your-cluster&amp;gt;
git clone https://github.com/leungsteve/realtime_enrichment.git
&lt;span style="color:#204a87">cd&lt;/span> realtime_enrichment/workshop
python3 -m venv rtapp-workshop
&lt;span style="color:#204a87">source&lt;/span> rtapp-workshop/bin/activate
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Follow these steps if you are using MULTIPASS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#8f5902;font-style:italic">#IMPORTANT NOTE:&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#run this on your mac&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#run this on your multipass ubuntu VM (e.g. multipass shell &amp;lt;vm name&amp;gt;)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#1. Yelp dataset placed in /var/appdata/&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#extract then move the yelp dataset (json) to /var/appdata&lt;/span>
sudo mkdir -p /var/appdata/
sudo chmod &lt;span style="color:#0000cf;font-weight:bold">777&lt;/span> /var/appdata/
mv &amp;lt;yelp*json&amp;gt; /var/appdata/
ll /var/appdata/yelp*
*output*
-rw-r--r--@ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> stevel staff &lt;span style="color:#0000cf;font-weight:bold">124380583&lt;/span> Jan &lt;span style="color:#0000cf;font-weight:bold">28&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2021&lt;/span> /var/appdata/yelp_academic_dataset_business.json
-rw-r--r--@ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> stevel staff &lt;span style="color:#0000cf;font-weight:bold">6936678061&lt;/span> Jan &lt;span style="color:#0000cf;font-weight:bold">28&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2021&lt;/span> /var/appdata/yelp_academic_dataset_review.json
-rw-r--r--@ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> stevel staff &lt;span style="color:#0000cf;font-weight:bold">3684505303&lt;/span> Jan &lt;span style="color:#0000cf;font-weight:bold">28&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2021&lt;/span> /var/appdata/yelp_academic_dataset_user.json
*output*
&lt;span style="color:#8f5902;font-style:italic">#3. Copy Workshop files to /var/appdata/Workshop on your Mac&lt;/span>
&lt;span style="color:#204a87">cd&lt;/span> /var/appdata
&lt;span style="color:#8f5902;font-style:italic">#4. a K8 environment (e.g. k3s on multipass)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#create a multipass VM., present the yelp dataset to the VM&lt;/span>
multipass launch --name test4cpu16gb --cpus &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> --mem 16Gb --disk 32GB
&lt;span style="color:#8f5902;font-style:italic">#makes the yelp dataset available to your VM&lt;/span>
multipass mount /var/appdata test4cpu16gb
multipass shell test4cpu16gb
ubuntu@test4cpu8gb:~$ ll /var/appdata/yelp*
-rw-r--r-- &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ubuntu ubuntu &lt;span style="color:#0000cf;font-weight:bold">124380583&lt;/span> Jan &lt;span style="color:#0000cf;font-weight:bold">28&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2021&lt;/span> /var/appdata/yelp_academic_dataset_business.json
-rw-r--r-- &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ubuntu ubuntu &lt;span style="color:#0000cf;font-weight:bold">6936678061&lt;/span> Jan &lt;span style="color:#0000cf;font-weight:bold">28&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2021&lt;/span> /var/appdata/yelp_academic_dataset_review.json
-rw-r--r-- &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ubuntu ubuntu &lt;span style="color:#0000cf;font-weight:bold">3684505303&lt;/span> Jan &lt;span style="color:#0000cf;font-weight:bold">28&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2021&lt;/span> /var/appdata/yelp_academic_dataset_user.json
curl -sfL https://get.k3s.io &lt;span style="color:#000;font-weight:bold">|&lt;/span> sh -
curl -s https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 &lt;span style="color:#000;font-weight:bold">|&lt;/span> bash
sudo mkdir -p ~/.kube
sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
sudo chown &lt;span style="color:#4e9a06">`&lt;/span>whoami&lt;span style="color:#4e9a06">`&lt;/span>. ~/.kube/config
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;export KUBECONFIG=~/.kube/config&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc
&lt;span style="color:#204a87">source&lt;/span> ~/.bashrc
&lt;span style="color:#8f5902;font-style:italic">#5. python3&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#recommended to create and work in a virtual environment (on your mac. not in multipass)&lt;/span>
python3 --version
Python 3.10.0
&lt;span style="color:#204a87">cd&lt;/span> Workshop
python3 -m venv rtapp-workshop
&lt;span style="color:#204a87">source&lt;/span> rtapp-workshop/bin/activate
&lt;span style="color:#8f5902;font-style:italic">#new prompt:&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#(rtapp-workshop) &lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Tko: Deploy complex environments and capture meterics</title><link>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/docs/deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/docs/deploy/</guid><description>
&lt;p>&lt;strong>Objective:&lt;/strong> Learn how to efficiently deploy complex infrastructure components such as Kafka and MongoDB to demonstrate metrics collection with Splunk O11y IM integrations&lt;/p>
&lt;p>&lt;strong>Duration&lt;/strong>: 15 Minutes&lt;/p>
&lt;h2 id="scenario">Scenario&lt;/h2>
&lt;p>A prospect uses Kafka and MongoDB in their environment. Since there are integrations for these services, you’d like to demonstrate this to the prospect. What is a quick and efficient way to set up a live environment with these services and have metrics collected?&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Where can I find helm charts?&lt;/p>
&lt;ul>
&lt;li>Google “myservice helm chart”&lt;/li>
&lt;li>&lt;a href="https://artifacthub.io/" target="_blank">https://artifacthub.io/&lt;/a>
(&lt;strong>Note:&lt;/strong> Look for charts from trusted organizations, with high star count and frequent updates)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Review Apache Kafka packaged by Bitnami. We will deploy the helm chart with these options enabled:&lt;/p>
&lt;ul>
&lt;li>&lt;code>replicaCount=3&lt;/code>&lt;/li>
&lt;li>&lt;code>metrics.jmx.enabled=true&lt;/code>&lt;/li>
&lt;li>&lt;code>metrics.kafka.enabled=true&lt;/code>&lt;/li>
&lt;li>&lt;code>deleteTopicEnable=true&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Review MongoDB(R) packaged by Bitnami. We will deploy the helm chart with these options enabled:&lt;/p>
&lt;ul>
&lt;li>&lt;code>version 12.1.31&lt;/code>&lt;/li>
&lt;li>&lt;code>metrics.enabled=true&lt;/code>&lt;/li>
&lt;li>&lt;code>global.namespaceOverride=default&lt;/code>&lt;/li>
&lt;li>&lt;code>auth.rootUser=root&lt;/code>&lt;/li>
&lt;li>&lt;code>auth.rootPassword=splunk&lt;/code>&lt;/li>
&lt;li>&lt;code>auth.enabled=false&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Install Kafka and MongoDB with helm charts&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo add bitnami https://charts.bitnami.com/bitnami
helm install kafka --set &lt;span style="color:#000">replicaCount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> --set metrics.jmx.enabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> --set metrics.kafka.enabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> --set &lt;span style="color:#000">deleteTopicEnable&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> bitnami/kafka
helm install mongodb --set metrics.enabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> bitnami/mongodb --set global.namespaceOverride&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>default --set auth.rootUser&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>root --set auth.rootPassword&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>splunk --set auth.enabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span> --version 12.1.31
&lt;span style="color:#8f5902;font-style:italic">###verify the helm chart installation&lt;/span>
helm list
NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION
kafka default &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 2022-11-14 11:21:36.328956822 -0800 PST deployed kafka-19.1.3 3.3.1
mongodb default &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 2022-11-14 11:19:36.507690487 -0800 PST deployed mongodb-12.1.31 5.0.10
&lt;span style="color:#8f5902;font-style:italic">###verify the helm chart installation&lt;/span>
kubectl get pods
NAME READY STATUS RESTARTS AGE
kafka-exporter-595778d7b4-99ztt 0/1 ContainerCreating &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 17s
mongodb-b7c968dbd-jxvsj 0/2 Pending &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 6s
kafka-1 0/2 ContainerCreating &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 16s
kafka-2 0/2 ContainerCreating &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 16s
kafka-zookeeper-0 0/1 Pending &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 17s
kafka-0 0/2 Pending &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 17s
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Use information for each Helm chart and Splunk O11y Data Setup to generate values.yaml for capturing metrics from Kafka and MongoDB. &lt;strong>Note:&lt;/strong> values.yaml for the different services will be passed to the Splunk Helm Chart at installation time. These will configure the OTEL collector to capture metrics from these services.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>References:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Apache Kafka packaged by Bitnami&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configure application receivers for databases » Apache Kafka&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Kafkametricsreceiver&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Example kafka.values.yaml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">otelAgent&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receivers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receiver_creator&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receivers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">smartagent/kafka&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rule&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">type == &amp;#34;pod&amp;#34; &amp;amp;&amp;amp; name matches &amp;#34;kafka&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#endpoint: &amp;#39;`endpoint`:5555&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5555&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">collectd/kafka&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">clusterName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sl-kafka&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">otelK8sClusterReceiver&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">k8sEventsEnabled&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receivers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kafkametrics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">brokers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">kafka:9092&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol_version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2.0.0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">scrapers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">brokers&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">topics&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">consumers&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">pipelines&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">metrics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receivers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#- prometheus&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">k8s_cluster&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">kafkametrics&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Example mongodb.values.yaml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">otelAgent&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receivers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receiver_creator&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receivers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">smartagent/mongodb&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rule&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">type == &amp;#34;pod&amp;#34; &amp;amp;&amp;amp; name matches &amp;#34;mongo&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">collectd/mongodb&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">mongodb.default.svc.cluster.local&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">27017&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">databases&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;admin&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;O11y&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;config&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">sendCollectionMetrics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">sendCollectionTopMetrics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Example zookeeper.values.yaml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">otelAgent&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receivers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receiver_creator&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">receivers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">smartagent/zookeeper&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rule&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">type == &amp;#34;pod&amp;#34; &amp;amp;&amp;amp; name matches &amp;#34;kafka-zookeeper&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">collectd/zookeeper&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">kafka-zookeeper&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2181&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Install the Splunk OTEL helm chart:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">SPLUNK_ACCESS_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your access token&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">SPLUNK_REALM&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your realm&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">clusterName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your cluster name&amp;gt;
&lt;span style="color:#204a87">cd&lt;/span> ../otel_yamls
helm repo add splunk-otel-collector-chart https://splunk.github.io/splunk-otel-collector-chart
helm repo update
helm install --set &lt;span style="color:#000">provider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39; &amp;#39;&lt;/span> --set &lt;span style="color:#000">distro&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39; &amp;#39;&lt;/span> --set splunkObservability.accessToken&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$SPLUNK_ACCESS_TOKEN&lt;/span> --set &lt;span style="color:#000">clusterName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$clusterName&lt;/span> --set splunkObservability.realm&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$SPLUNK_REALM&lt;/span> --set otelCollector.enabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;false&amp;#39;&lt;/span> --set splunkObservability.logsEnabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;true&amp;#39;&lt;/span> --set gateway.enabled&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;false&amp;#39;&lt;/span> --values kafka.values.yaml --values mongodb.values.yaml --values zookeeper.values.yaml --values alwayson.values.yaml --values k3slogs.yaml --generate-name splunk-otel-collector-chart/splunk-otel-collector
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Verify that the Kafka, MongoDB and Splunk OTEL Collector helm charts are installed. Note that names may differ.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">$helm list
NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION
kafka default 1 2021-12-07 12:48:47.066421971 -0800 PST deployed kafka-14.4.1 2.8.1
mongodb default 1 2021-12-07 12:49:06.132771625 -0800 PST deployed mongodb-10.29.2 4.4.10
splunk-otel-collector-1638910184 default 1 2021-12-07 12:49:45.694013749 -0800 PST deployed splunk-otel-collector-0.37.1 0.37.1
$ kubectl get pods
NAME READY STATUS RESTARTS AGE
kafka-zookeeper-0 1/1 Running 0 18m
kafka-2 2/2 Running 1 18m
mongodb-79cf87987f-gsms8 2/2 Running 0 18m
kafka-1 2/2 Running 1 18m
kafka-exporter-7c65fcd646-dvmtv 1/1 Running 3 18m
kafka-0 2/2 Running 1 18m
splunk-otel-collector-1638910184-agent-27s5c 2/2 Running 0 17m
splunk-otel-collector-1638910184-k8s-cluster-receiver-8587qmh9l 1/1 Running 0 17m
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Verify that out of the box dashboards for Kafka, MongoDB and Zookeeper are populated in the Infrastructure Monitor landing page. Drill down into each component to view granular details for each service.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Infrastructure Monitoring Landing page:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>K8 Navigator:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MongoDB Dashboard:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Kafka Dashboard:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Tko: Code to Kubernetes - Python</title><link>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/docs/code_to_python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.42/tko/session-2/docs/code_to_python/</guid><description>
&lt;h2 id="code-to-kubernetes---python">Code to Kubernetes - Python&lt;/h2>
&lt;p>&lt;strong>Objective:&lt;/strong> Understand activities to instrument a python application and run it on Kubernetes.&lt;/p>
&lt;ul>
&lt;li>Verify the code&lt;/li>
&lt;li>Containerize the app&lt;/li>
&lt;li>Deploy the container in Kubernetes&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> these steps do not involve Splunk&lt;/p>
&lt;p>&lt;strong>Duration:&lt;/strong> 15 Minutes&lt;/p>
&lt;h2 id="verify-the-code---review-service">Verify the code - Review service&lt;/h2>
&lt;p>Inspect review.py (workshop/flask_apps_start/review)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">flask&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">Flask&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">jsonify&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">random&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">subprocess&lt;/span>
&lt;span style="color:#000">review&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Flask&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">__name__&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">num_reviews&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8635403&lt;/span>
&lt;span style="color:#000">num_reviews&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100000&lt;/span>
&lt;span style="color:#000">reviews_file&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;/var/appdata/yelp_academic_dataset_review.json&amp;#39;&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@review&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">route&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">hello_world&lt;/span>&lt;span style="color:#000;font-weight:bold">():&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">jsonify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">message&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Hello, you want to hit /get_review. We have &amp;#39;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#204a87">str&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">num_reviews&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#39; reviews!&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#5c35cc;font-weight:bold">@review&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">route&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;/get_review&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">get_review&lt;/span>&lt;span style="color:#000;font-weight:bold">():&lt;/span>
&lt;span style="color:#000">random_review_int&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">str&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">random&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">randint&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">num_reviews&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">line_num&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">random_review_int&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;q;d&amp;#39;&lt;/span>
&lt;span style="color:#000">command&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sed&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">line_num&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">reviews_file&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># sed &amp;#34;7997242q;d&amp;#34; &amp;lt;file&amp;gt;&lt;/span>
&lt;span style="color:#000">random_review&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">subprocess&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">run&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">command&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">stdout&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">subprocess&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">PIPE&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">text&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">True&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">random_review&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">stdout&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">__name__&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">run&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">port&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5000&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">debug&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">True&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Inspect requirements.txt&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">Flask==2.0.2
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a virtual environment and Install the necessary python packages&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">cd&lt;/span> Workshop/flask_apps_start/review
python3 -m venv rtapp-workshop
&lt;span style="color:#204a87">source&lt;/span> rtapp-workshop/bin/activate
pip freeze &lt;span style="color:#8f5902;font-style:italic">#note output&lt;/span>
pip install -r requirements.txt
pip freeze &lt;span style="color:#8f5902;font-style:italic">#note output&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the REVIEW service. &lt;strong>Note:&lt;/strong> You can stop the app with control+C&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">python3 review.py
* Serving Flask app &lt;span style="color:#4e9a06">&amp;#39;review&amp;#39;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>lazy loading&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
* Environment: production
...snip...
* Running on http://10.160.145.246:5000/ &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>Press CTRL+C to quit&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
* Restarting with stat
127.0.0.1 - - &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>17/May/2022 22:46:38&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;GET / HTTP/1.1&amp;#34;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span> -
127.0.0.1 - - &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>17/May/2022 22:47:02&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;GET /get_review HTTP/1.1&amp;#34;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span> -
127.0.0.1 - - &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>17/May/2022 22:47:58&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;GET /get_review HTTP/1.1&amp;#34;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span> -
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verify that the service is working&lt;/p>
&lt;ul>
&lt;li>Hit the URL http://localhost:5000 and http://localhost:5000/get_review with a browser&lt;/li>
&lt;li>Or, use curl in your terminal&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl localhost:5000
&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Hello, you want to hit /get_review. We have 100000 reviews!&amp;#34;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
curl localhost:5000/get_review
&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;review_id&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;NjbiESXotcEdsyTc4EM3fg&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;user_id&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;PR9LAM19rCM_HQiEm5OP5w&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;business_id&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;UAtX7xmIfdd1W2Pebf6NWg&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;stars&amp;#34;&lt;/span>:3.0,&lt;span style="color:#4e9a06">&amp;#34;useful&amp;#34;&lt;/span>:0,&lt;span style="color:#4e9a06">&amp;#34;funny&amp;#34;&lt;/span>:0,&lt;span style="color:#4e9a06">&amp;#34;cool&amp;#34;&lt;/span>:0,&lt;span style="color:#4e9a06">&amp;#34;text&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;-If you&amp;#39;re into cheap beer (pitcher of bud-light for &lt;/span>&lt;span style="color:#000">$7&lt;/span>&lt;span style="color:#4e9a06">) decent wings and a good time, this is the place for you. Its generally very packed after work hours and weekends. Don&amp;#39;t expect cocktails. \n\n-You run into a lot of sketchy characters here sometimes but for the most part if you&amp;#39;re chilling with friends its not that bad. \n\n-Friendly bouncer and bartenders.&amp;#34;&lt;/span>,&lt;span style="color:#4e9a06">&amp;#34;date&amp;#34;&lt;/span>:&lt;span style="color:#4e9a06">&amp;#34;2016-04-12 20:23:24&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;div class="alert alert-danger" role="alert">
&lt;p class="alert-heading">Workshop Question&lt;/p>
&lt;div class="alert-body">
&lt;ul>
&lt;li>What does this application do?&lt;/li>
&lt;li>Do you see the yelp dataset being used?&lt;/li>
&lt;li>Why did the output of pip freeze differ each time you ran it?&lt;/li>
&lt;li>Which port is the REVIEW app listening on? Can other python apps use this same port?&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
}&lt;/p>
&lt;h2 id="create-a-review-container">Create a REVIEW container&lt;/h2>
&lt;p>To create a container image, you need to create a Dockerfile, run docker build to build the image referencing the Docker file and push it up to a remote repository so it can be pulled by other sources.&lt;/p>
&lt;ul>
&lt;li>Create a Dockerfile&lt;/li>
&lt;li>Creating a Dockerfile typically requires you to consider the following:
&lt;ul>
&lt;li>Identify an appropriate container image
&lt;ul>
&lt;li>ubuntu vs. python vs. alpine/slim&lt;/li>
&lt;li>ubuntu - overkill, large image size, wasted resources when running in K8&lt;/li>
&lt;li>this is a python app, so pick an image that is optimized for it&lt;/li>
&lt;li>avoid alpine for python&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Order matters
&lt;ul>
&lt;li>you&amp;rsquo;re building layers.&lt;/li>
&lt;li>re-use the layers as much as possible&lt;/li>
&lt;li>have items that change often towards the end&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Other Best practices for writing Dockerfiles&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Dockerfile for review&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="color:#204a87;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4e9a06"> python:3.10-slim&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">WORKDIR&lt;/span>&lt;span style="color:#4e9a06"> /app&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">COPY&lt;/span> requirements.txt /app&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> pip install -r requirements.txt&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">COPY&lt;/span> ./review.py /app&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">EXPOSE&lt;/span>&lt;span style="color:#4e9a06"> 5000&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CMD&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;python&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;review.py&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a container image (locally)
Run ‘docker build’ to build a local container image referencing the Dockerfile&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>venv&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>% docker build -f Dockerfile -t localhost:8000/review:0.01 .
&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>+&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Building 35.5s &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>11/11&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#000">FINISHED&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>internal&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> load build definition from Dockerfile 0.0s
...snip...
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>3/5&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> COPY requirements.txt /app 0.0s
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>4/5&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> RUN pip install -r requirements.txt 4.6s
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>5/5&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> COPY ./review.py /app 0.0s
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; exporting to image 0.2s
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; exporting layers 0.2s
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; writing image sha256:61da27081372723363d0425e0ceb34bbad6e483e698c6fe439c5 0.0s
&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; naming to docker.io/localhost:8000/review:0.1 0.0
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Push the container image into a container repository
Run ‘docker push’ to place a copy of the REVIEW container to a remote location&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker push localhost:8000/review:0.01
The push refers to repository &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>docker.io/localhost:8000/review&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
02c36dfb4867: Pushed
...snip...
fd95118eade9: Pushed
0.1: digest: sha256:3651f740abe5635af95d07acd6bcf814e4d025fcc1d9e4af9dee023a9b286f38 size: &lt;span style="color:#0000cf;font-weight:bold">2202&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verify that the image is in Docker Hub. The same info can be found in Docker Desktop&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl -s http://localhost:8000/v2/_catalog
&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;repositories&amp;#34;&lt;/span>:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;review&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="run-review-in-kubernetes">Run REVIEW in Kubernetes&lt;/h2>
&lt;p>Create K8 deployment yaml file for the REVIEW app
Reference: Creating a Deployment&lt;/p>
&lt;p>review.deployment.yaml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apps/v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Deployment&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">replicas&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">matchLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">template&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">imagePullSecrets&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">regcred&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localhost:8000/review:0.01&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumeMounts&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">mountPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/var/appdata&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">appdata&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">appdata&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/var/appdata&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notes regarding review.deployment.yaml:&lt;/p>
&lt;ul>
&lt;li>labels - K8 uses labels and selectors to tag and identify resources
&lt;ul>
&lt;li>In the next step, we&amp;rsquo;ll create a service and associate it to this deployment using the label&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>replicas = 1
&lt;ul>
&lt;li>K8 allows you to scale your deployments horizontally&lt;/li>
&lt;li>We&amp;rsquo;ll leverage this later to add load and increase our ingestion rate&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>regcred provides this deployment with the ability to access your dockerhub credentials which is necessary to pull the container image.&lt;/li>
&lt;li>The volume definition and volumemount make the yelp dataset visible to the container&lt;/li>
&lt;/ul>
&lt;p>Create a K8 service yaml file for the review app. Reference: Creating a service:&lt;/p>
&lt;p>review.service.yaml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Service&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">NodePort&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">review&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">targetPort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">nodePort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">30000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notes about review.service.yaml:&lt;/p>
&lt;ul>
&lt;li>the selector associates this service to pods with the label app with the value being review&lt;/li>
&lt;li>the review service exposes the review pods as a network service
&lt;ul>
&lt;li>other pods can now ping &amp;lsquo;review&amp;rsquo; and they will hit a review pod.&lt;/li>
&lt;li>a pod would get a review if it ran &amp;lsquo;curl http://review:5000&amp;rsquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NodePort service
&lt;ul>
&lt;li>the service is accessible to the K8 host by the nodePort, 30000&lt;/li>
&lt;li>Another machine that has this can get a review if it ran &amp;lsquo;curl http://&lt;k8 host ip>:30000&amp;rsquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Apply the review deployment and service&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl apply -f review.service.yaml -f review.deployment.yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verify that the deployment and services are running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">ubuntu@ip-10-0-1-54:/tmp$ kubectl get deployments
NAME READY UP-TO-DATE AVAILABLE AGE
review 1/1 1 1 19h
ubuntu@ip-10-0-1-54:/tmp$ kubectl get services
NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE
review NodePort 10.43.175.21 &amp;lt;none&amp;gt; 5000:30000/TCP 154d
ubuntu@ip-10-0-1-54:/tmp$ curl localhost:30000
{
&amp;#34;message&amp;#34;: &amp;#34;Hello, you want to hit /get_review. We have 100000 reviews!&amp;#34;
}
ubuntu@ip-10-0-1-54:/tmp$ curl localhost:30000/get_review
{&amp;#34;review_id&amp;#34;:&amp;#34;Vv9rHtfBrFc-1M1DHRKN9Q&amp;#34;,&amp;#34;user_id&amp;#34;:&amp;#34;EaNqIwKkM7p1bkraKotqrg&amp;#34;,&amp;#34;business_id&amp;#34;:&amp;#34;TA1KUSCu8GkWP9w0rmElxw&amp;#34;,&amp;#34;stars&amp;#34;:3.0,&amp;#34;useful&amp;#34;:1,&amp;#34;funny&amp;#34;:0,&amp;#34;cool&amp;#34;:0,&amp;#34;text&amp;#34;:&amp;#34;This is the first time I&amp;#39;ve actually written a review for Flip, but I&amp;#39;ve probably been here about 10 times. \n\nThis used to be where I would take out of town guests who wanted a good, casual, and relatively inexpensive meal. \n\nI hadn&amp;#39;t been for a while, so after a long day in midtown, we decided to head to Flip. \n\nWe had the fried pickles, onion rings, the gyro burger, their special burger, and split a nutella milkshake. I have tasted all of the items we ordered previously (with the exception of the special) and have been blown away with how good they were. My guy had the special which was definitely good, so no complaints there. The onion rings and the fried pickles were greasier than expected. Though I&amp;#39;ve thought they were delicious in the past, I probably wouldn&amp;#39;t order either again. The gyro burger was good, but I could have used a little more sauce. It almost tasted like all of the ingredients didn&amp;#39;t entirely fit together. Something was definitely off. It was a friday night and they weren&amp;#39;t insanely busy, so I&amp;#39;m not sure I would attribute it to the staff not being on their A game...\n\nDon&amp;#39;t get me wrong. Flip is still good. The wait staff is still amazingly good looking. They still make delicious milk shakes. It&amp;#39;s just not as amazing as it once was, which really is a little sad.&amp;#34;,&amp;#34;date&amp;#34;:&amp;#34;2010-10-11 18:18:35&amp;#34;}
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-danger" role="alert">
&lt;p class="alert-heading">Workshop Question&lt;/p>
&lt;div class="alert-body">
&lt;ul>
&lt;li>What changes are required if you need to make an update to your Dockerfile now?&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;h2 id="end-of-tko-lab">END OF TKO LAB&lt;/h2>
&lt;p>We hope you found this session and lab useful. We have optional exercise you can do if you finish ahead of schedule, or if you would like to run this at home. Remember this resource can be used at customers to show the value / ease of OTEL.&lt;/p>
&lt;p>Please be sure to review our session and provide feedback so we may improve your experience.&lt;/p>
&lt;p>Happy Splunking!!&lt;/p></description></item></channel></rss>