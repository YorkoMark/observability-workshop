<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Splunk Observability Cloud Workshops – Get Data In</title><link>https://splunk.github.io/observability-workshop/v4.45/imt/docs/gdi/</link><description>Recent content in Get Data In on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v4.45/imt/docs/gdi/index.xml" rel="self" type="application/rss+xml"/><item><title>Imt: Deploying the OpenTelemetry Collector in Kubernetes</title><link>https://splunk.github.io/observability-workshop/v4.45/imt/docs/gdi/k3s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.45/imt/docs/gdi/k3s/</guid><description>
&lt;ul>
&lt;li>Use the Splunk Helm chart to install the OpenTelemetry Collector in K3s&lt;/li>
&lt;li>Explore your cluster in the Kubernetes Navigator&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="1-obtain-access-token">1. Obtain Access Token&lt;/h2>
&lt;p>You will need to obtain your Access Token&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> from the Splunk UI. You can find the workshop Access Token by clicking &lt;strong>&amp;raquo;&lt;/strong> bottom left and then selecting &lt;strong>Settings → Access Tokens&lt;/strong>.&lt;/p>
&lt;p>Expand the workshop token that your host has instructed you to use e.g. &lt;strong>O11y-Workshop-ACCESS&lt;/strong>, then click on &lt;strong>Show Token&lt;/strong> to expose your token. Click the
&lt;strong class="label-button ui-button-grey" role="label-button">
Copy
&lt;/strong>
&amp;nbsp; button to copy to clipboard. Please do not use the &lt;strong>Default&lt;/strong> token!&lt;/p>
&lt;p>&lt;img src="../../../images/access-token.png" alt="Access Token">&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;p class="alert-heading">Please do not attempt to create your own token&lt;/p>
&lt;div class="alert-body">
We have created a Token specifically for this workshop with the appropriate settings for the exercises you will be performing so have allocated it both Ingest and API Permissions. Best practice in production is to only allocate a single permission to a Token such as Ingest OR API OR RUM and use multiple Tokens where required.
&lt;/div>
&lt;/div>
&lt;p>You will also need to obtain the name of the Realm&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> for your Splunk account. At the top of the side menu, click on your name. This will direct you to the &lt;strong>Account Settings&lt;/strong> Page. Click the &lt;strong>Organizations&lt;/strong>-tab. The Realm can be found at the top of the displayed information in the tab. In this example it is &lt;code>eu0&lt;/code>.&lt;/p>
&lt;p>&lt;img src="../../../images/account-settings.png" alt="Account Settings">&lt;/p>
&lt;h2 id="2-installation-using-helm">2. Installation using Helm&lt;/h2>
&lt;p>Create the &lt;code>ACCESS_TOKEN&lt;/code> and &lt;code>REALM&lt;/code> environment variables to use in the proceeding Helm install command. For instance, if your realm is &lt;code>us1&lt;/code>, you would type &lt;code>export REALM=us1&lt;/code> and for &lt;code>eu0&lt;/code> type &lt;code>export REALM=eu0&lt;/code>.&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Export-Variables"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Export-Variables&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Export Variables
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Export-Access-Token"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Export-Access-Token&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Export Access Token
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Export-Realm"
id="tabs-2-2-tab" data-toggle="tab" href="#tabs-2-2" role="tab" onclick="handleClick(&amp;#34;Export-Realm&amp;#34;);"
aria-controls="tabs-2-2" aria-selected="false">
Export Realm
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ACCESS_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;replace_with_O11y-Workshop-ACCESS_token&amp;gt;
&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">REALM&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;replace_with_splunk_realm&amp;gt;&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ACCESS_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-2" role="tabpanel" aria-labelled-by="tabs-2-2-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">REALM&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;p>Install the OpenTelemetry Collector using the Splunk Helm chart. First, add the Splunk Helm chart repository to Helm and update.
&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Helm-Repo-Add"
id="tabs-3-0-tab" data-toggle="tab" href="#tabs-3-0" role="tab" onclick="handleClick(&amp;#34;Helm-Repo-Add&amp;#34;);"
aria-controls="tabs-3-0" aria-selected="true">
Helm Repo Add
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Helm-Repo-Add-Output"
id="tabs-3-1-tab" data-toggle="tab" href="#tabs-3-1" role="tab" onclick="handleClick(&amp;#34;Helm-Repo-Add-Output&amp;#34;);"
aria-controls="tabs-3-1" aria-selected="false">
Helm Repo Add Output
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-3-content">&lt;div class="tab-pane fade show active"
id="tabs-3-0" role="tabpanel" aria-labelled-by="tabs-3-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm repo add splunk-otel-collector-chart https://signalfx.github.io/splunk-otel-collector-chart &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> helm repo update&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-1" role="tabpanel" aria-labelled-by="tabs-3-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">Using ACCESS_TOKEN={REDACTED}
Using REALM=eu0
&amp;#34;splunk-otel-collector-chart&amp;#34; has been added to your repositories
Using ACCESS_TOKEN={REDACTED}
Using REALM=eu0
Hang tight while we grab the latest from your chart repositories...
...Successfully got an update from the &amp;#34;splunk-otel-collector-chart&amp;#34; chart repository
Update Complete. ⎈Happy Helming!⎈&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/p>
&lt;p>Install the OpenTelemetry Collector Helm chart with the following commands, do &lt;strong>NOT&lt;/strong> edit this:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-4" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Helm-Install"
id="tabs-4-0-tab" data-toggle="tab" href="#tabs-4-0" role="tab" onclick="handleClick(&amp;#34;Helm-Install&amp;#34;);"
aria-controls="tabs-4-0" aria-selected="true">
Helm Install
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Helm-Install-Single-Line"
id="tabs-4-1-tab" data-toggle="tab" href="#tabs-4-1" role="tab" onclick="handleClick(&amp;#34;Helm-Install-Single-Line&amp;#34;);"
aria-controls="tabs-4-1" aria-selected="false">
Helm Install Single Line
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Helm-Install-Output"
id="tabs-4-2-tab" data-toggle="tab" href="#tabs-4-2" role="tab" onclick="handleClick(&amp;#34;Helm-Install-Output&amp;#34;);"
aria-controls="tabs-4-2" aria-selected="false">
Helm Install Output
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-4-content">&lt;div class="tab-pane fade show active"
id="tabs-4-0" role="tabpanel" aria-labelled-by="tabs-4-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm install splunk-otel-collector &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.realm=&lt;/span>&lt;span style="color:#000">$REALM&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.accessToken=&lt;/span>&lt;span style="color:#000">$ACCESS_TOKEN&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;clusterName=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>hostname&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">-k3s-cluster&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.logsEnabled=true&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.profilingEnabled=true&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.infrastructureMonitoringEventsEnabled=true&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;environment=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>hostname&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">-apm-env&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>splunk-otel-collector-chart/splunk-otel-collector &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-f ~/workshop/k3s/otel-collector.yaml&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-4-1" role="tabpanel" aria-labelled-by="tabs-4-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">helm install splunk-otel-collector --set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.realm=&lt;/span>&lt;span style="color:#000">$REALM&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> --set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.accessToken=&lt;/span>&lt;span style="color:#000">$ACCESS_TOKEN&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> --set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;clusterName=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>hostname&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">-k3s-cluster&amp;#34;&lt;/span> --set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.logsEnabled=true&amp;#34;&lt;/span> --set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;splunkObservability.profilingEnabled=true&amp;#34;&lt;/span> --set&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;environment=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>hostname&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">-apm-env&amp;#34;&lt;/span> splunk-otel-collector-chart/splunk-otel-collector -f ~/workshop/k3s/otel-collector.yaml&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-4-2" role="tabpanel" aria-labelled-by="tabs-4-2-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">Using ACCESS_TOKEN={REDACTED}
Using REALM=eu0
NAME: splunk-otel-collector
LAST DEPLOYED: Fri May 7 11:19:01 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;p>You can monitor the progress of the deployment by running &lt;code>kubectl get pods&lt;/code> which should typically report a new pod is up and running after about 30 seconds.&lt;/p>
&lt;p>Ensure the status is reported as Running before continuing.&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-5" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Kubectl-Get-Pods"
id="tabs-5-0-tab" data-toggle="tab" href="#tabs-5-0" role="tab" onclick="handleClick(&amp;#34;Kubectl-Get-Pods&amp;#34;);"
aria-controls="tabs-5-0" aria-selected="true">
Kubectl Get Pods
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Kubectl-Get-Pods-Output"
id="tabs-5-1-tab" data-toggle="tab" href="#tabs-5-1" role="tab" onclick="handleClick(&amp;#34;Kubectl-Get-Pods-Output&amp;#34;);"
aria-controls="tabs-5-1" aria-selected="false">
Kubectl Get Pods Output
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-5-content">&lt;div class="tab-pane fade show active"
id="tabs-5-0" role="tabpanel" aria-labelled-by="tabs-5-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pods&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-5-1" role="tabpanel" aria-labelled-by="tabs-5-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">NAME READY STATUS RESTARTS AGE
splunk-otel-collector-agent-2sk6k 0/1 Running 0 10s
splunk-otel-collector-k8s-cluster-receiver-6956d4446f-gwnd7 0/1 Running 0 10s&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;p>Ensure there are no errors by tailing the logs from the OpenTelemetry Collector pod. Output should look similar to the log output shown in the Output tab below.&lt;/p>
&lt;p>Use the label set by the &lt;code>helm&lt;/code> install to tail logs (You will need to press &lt;code>ctrl+c&lt;/code> to exit). Or use the installed &lt;code>k9s&lt;/code> terminal UI for bonus points!&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-6" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Kubectl-Logs"
id="tabs-6-0-tab" data-toggle="tab" href="#tabs-6-0" role="tab" onclick="handleClick(&amp;#34;Kubectl-Logs&amp;#34;);"
aria-controls="tabs-6-0" aria-selected="true">
Kubectl Logs
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Kubectl-Logs-Output"
id="tabs-6-1-tab" data-toggle="tab" href="#tabs-6-1" role="tab" onclick="handleClick(&amp;#34;Kubectl-Logs-Output&amp;#34;);"
aria-controls="tabs-6-1" aria-selected="false">
Kubectl Logs Output
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-6-content">&lt;div class="tab-pane fade show active"
id="tabs-6-0" role="tabpanel" aria-labelled-by="tabs-6-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl logs -l &lt;span style="color:#000">app&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>splunk-otel-collector -f --container otel-collector&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-6-1" role="tabpanel" aria-labelled-by="tabs-6-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">2021-03-21T16:11:10.900Z INFO service/service.go:364 Starting receivers...
2021-03-21T16:11:10.900Z INFO builder/receivers_builder.go:70 Receiver is starting... {&amp;#34;component_kind&amp;#34;: &amp;#34;receiver&amp;#34;, &amp;#34;component_type&amp;#34;: &amp;#34;prometheus&amp;#34;, &amp;#34;component_name&amp;#34;: &amp;#34;prometheus&amp;#34;}
2021-03-21T16:11:11.009Z INFO builder/receivers_builder.go:75 Receiver started. {&amp;#34;component_kind&amp;#34;: &amp;#34;receiver&amp;#34;, &amp;#34;component_type&amp;#34;: &amp;#34;prometheus&amp;#34;, &amp;#34;component_name&amp;#34;: &amp;#34;prometheus&amp;#34;}
2021-03-21T16:11:11.009Z INFO builder/receivers_builder.go:70 Receiver is starting... {&amp;#34;component_kind&amp;#34;: &amp;#34;receiver&amp;#34;, &amp;#34;component_type&amp;#34;: &amp;#34;k8s_cluster&amp;#34;, &amp;#34;component_name&amp;#34;: &amp;#34;k8s_cluster&amp;#34;}
2021-03-21T16:11:11.009Z INFO k8sclusterreceiver@v0.21.0/watcher.go:195 Configured Kubernetes MetadataExporter {&amp;#34;component_kind&amp;#34;: &amp;#34;receiver&amp;#34;, &amp;#34;component_type&amp;#34;: &amp;#34;k8s_cluster&amp;#34;, &amp;#34;component_name&amp;#34;: &amp;#34;k8s_cluster&amp;#34;, &amp;#34;exporter_name&amp;#34;: &amp;#34;signalfx&amp;#34;}
2021-03-21T16:11:11.009Z INFO builder/receivers_builder.go:75 Receiver started. {&amp;#34;component_kind&amp;#34;: &amp;#34;receiver&amp;#34;, &amp;#34;component_type&amp;#34;: &amp;#34;k8s_cluster&amp;#34;, &amp;#34;component_name&amp;#34;: &amp;#34;k8s_cluster&amp;#34;}
2021-03-21T16:11:11.009Z INFO healthcheck/handler.go:128 Health Check state change {&amp;#34;component_kind&amp;#34;: &amp;#34;extension&amp;#34;, &amp;#34;component_type&amp;#34;: &amp;#34;health_check&amp;#34;, &amp;#34;component_name&amp;#34;: &amp;#34;health_check&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;ready&amp;#34;}
2021-03-21T16:11:11.009Z INFO service/service.go:267 Everything is ready. Begin running and processing data.
2021-03-21T16:11:11.009Z INFO k8sclusterreceiver@v0.21.0/receiver.go:59 Starting shared informers and wait for initial cache sync. {&amp;#34;component_kind&amp;#34;: &amp;#34;receiver&amp;#34;, &amp;#34;component_type&amp;#34;: &amp;#34;k8s_cluster&amp;#34;, &amp;#34;component_name&amp;#34;: &amp;#34;k8s_cluster&amp;#34;}
2021-03-21T16:11:11.281Z INFO k8sclusterreceiver@v0.21.0/receiver.go:75 Completed syncing shared informer caches. {&amp;#34;component_kind&amp;#34;: &amp;#34;receiver&amp;#34;, &amp;#34;component_type&amp;#34;: &amp;#34;k8s_cluster&amp;#34;, &amp;#34;component_name&amp;#34;: &amp;#34;k8s_cluster&amp;#34;}&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;p class="alert-heading">Deleting a failed installation&lt;/p>
&lt;div class="alert-body">
If you make an error installing the OpenTelemetry Collector you can start over by deleting the installation using:
&lt;strong>helm delete splunk-otel-collector&lt;/strong>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2 id="3-validate-metrics-in-the-ui">3. Validate metrics in the UI&lt;/h2>
&lt;p>In the Splunk UI, click the &lt;strong>&amp;raquo;&lt;/strong> bottom left and click on &lt;strong>Infrastructure&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="../../../images/clustermap-nav.png" alt="Selecting the Kubernetes Navigator Map">&lt;/p>
&lt;p>Under &lt;strong>Containers&lt;/strong> click on &lt;strong>Kubernetes&lt;/strong> to open the Kubernetes Navigator Cluster Map to ensure metrics are being sent in.&lt;/p>
&lt;p>Validate that your cluster is discovered and reporting by finding your cluster (in the workshop you will see many other clusters). To find your cluster name run the following command and copy the output to your clipboard:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-8" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Echo-Cluster-Name"
id="tabs-8-0-tab" data-toggle="tab" href="#tabs-8-0" role="tab" onclick="handleClick(&amp;#34;Echo-Cluster-Name&amp;#34;);"
aria-controls="tabs-8-0" aria-selected="true">
Echo Cluster Name
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-8-content">&lt;div class="tab-pane fade show active"
id="tabs-8-0" role="tabpanel" aria-labelled-by="tabs-8-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>hostname&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>-k3s-cluster&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;p>Then in the UI, click on the &amp;ldquo;Cluster: - &amp;quot; menu just below the Splunk Logo, and paste the Cluster name you just copied into the search box, click the box to select your cluster, and finally click off the menu into white space to apply the filter.&lt;/p>
&lt;p>&lt;img src="../../../images/search-k3s-cluster.png" alt="K8S Clusters Filter">&lt;/p>
&lt;p>&lt;img src="../../../images/selecting-k3s-cluster.png" alt="Select K8S Cluster">&lt;/p>
&lt;p>&lt;img src="../../../images/filtered-k3s-cluster.png" alt="Filtered K8S Cluster">&lt;/p>
&lt;p>To examine the health of your node, hover over the pale blue background of your cluster, then click on the blue magnifying glass &lt;img src="../../../images/blue-cross.png" alt="Magnifying Glass"> that appears in the top left hand corner.&lt;/p>
&lt;p>This will drill down to the node level. Next, open the side bar by clicking on the side bar button to open the Metrics side bar.&lt;/p>
&lt;p>Once it is open, you can use the slider on the side to explore the various charts relevant to your cluster/node: CPU, Memory, Network, Events etc.&lt;/p>
&lt;p>&lt;img src="../../../images/explore-metrics.png" alt="Sidebar metrics">&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Access Tokens (sometimes called Org Tokens) are long-lived organization-level tokens. By default, these tokens persist for 5 years, and thus are suitable for embedding into emitters that send data points over long periods of time, or for any long-running scripts that call the Splunk API.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>A realm is a self-contained deployment of Splunk in which your Organization is hosted. Different realms have different API endpoints (e.g. the endpoint for sending data is &lt;code>ingest.us1.signalfx.com&lt;/code> for the &lt;strong>&lt;code>us1&lt;/code>&lt;/strong> realm, and &lt;code>ingest.eu0.signalfx.com&lt;/code> for the &lt;strong>&lt;code>eu0&lt;/code>&lt;/strong> realm). This realm name is shown on your profile page in the Splunk UI. If you do not include the realm name when specifying an endpoint, Splunk will interpret it as pointing to the &lt;strong>&lt;code>us0&lt;/code>&lt;/strong> realm.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Imt: Deploying NGINX in K3s</title><link>https://splunk.github.io/observability-workshop/v4.45/imt/docs/gdi/nginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v4.45/imt/docs/gdi/nginx/</guid><description>
&lt;ul>
&lt;li>Deploy a NGINX ReplicaSet into your K3s cluster and confirm the discovery of your NGINX deployment.&lt;/li>
&lt;li>Run a load test to create metrics and confirm them streaming into Splunk Observability Cloud!&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="1-start-your-nginx">1. Start your NGINX&lt;/h2>
&lt;p>Verify the number of pods running in the Splunk UI by selecting the &lt;strong>WORKLOADS&lt;/strong> tab. This should give you an overview of the workloads on your cluster.&lt;/p>
&lt;p>&lt;img src="../../../images/k8s-workloads.png" alt="Workload Agent">&lt;/p>
&lt;p>Note the single agent container running per node among the default Kubernetes pods. This single container will monitor all the pods and services being deployed on this node!&lt;/p>
&lt;p>Now switch back to the default cluster node view by selecting the &lt;strong>MAP&lt;/strong> tab and select your cluster again.&lt;/p>
&lt;p>In your AWS/EC2 or Multipass shell session change into the &lt;code>nginx&lt;/code> directory:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-0" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Change-Directory"
id="tabs-0-0-tab" data-toggle="tab" href="#tabs-0-0" role="tab" onclick="handleClick(&amp;#34;Change-Directory&amp;#34;);"
aria-controls="tabs-0-0" aria-selected="true">
Change Directory
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-0-content">&lt;div class="tab-pane fade show active"
id="tabs-0-0" role="tabpanel" aria-labelled-by="tabs-0-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87">cd&lt;/span> ~/workshop/k3s/nginx&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2 id="2-create-nginx-deployment">2. Create NGINX deployment&lt;/h2>
&lt;p>Create the NGINX &lt;code>configmap&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> using the &lt;code>nginx.conf&lt;/code> file:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Kubectl-Configmap-Create"
id="tabs-1-0-tab" data-toggle="tab" href="#tabs-1-0" role="tab" onclick="handleClick(&amp;#34;Kubectl-Configmap-Create&amp;#34;);"
aria-controls="tabs-1-0" aria-selected="true">
Kubectl Configmap Create
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Kubectl-Create-Configmap-Output"
id="tabs-1-1-tab" data-toggle="tab" href="#tabs-1-1" role="tab" onclick="handleClick(&amp;#34;Kubectl-Create-Configmap-Output&amp;#34;);"
aria-controls="tabs-1-1" aria-selected="false">
Kubectl Create Configmap Output
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-1-content">&lt;div class="tab-pane fade show active"
id="tabs-1-0" role="tabpanel" aria-labelled-by="tabs-1-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl create configmap nginxconfig --from-file&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>nginx.conf&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-1-1" role="tabpanel" aria-labelled-by="tabs-1-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">configmap/nginxconfig created&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;p>Then create the deployment:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Kubectl-Create-Deployment"
id="tabs-2-0-tab" data-toggle="tab" href="#tabs-2-0" role="tab" onclick="handleClick(&amp;#34;Kubectl-Create-Deployment&amp;#34;);"
aria-controls="tabs-2-0" aria-selected="true">
Kubectl Create Deployment
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Kubectl-Create-Deployment-Output"
id="tabs-2-1-tab" data-toggle="tab" href="#tabs-2-1" role="tab" onclick="handleClick(&amp;#34;Kubectl-Create-Deployment-Output&amp;#34;);"
aria-controls="tabs-2-1" aria-selected="false">
Kubectl Create Deployment Output
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-2-content">&lt;div class="tab-pane fade show active"
id="tabs-2-0" role="tabpanel" aria-labelled-by="tabs-2-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl create -f nginx-deployment.yaml&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-2-1" role="tabpanel" aria-labelled-by="tabs-2-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">deployment.apps/nginx created
service/nginx created&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;p>Next we will deploy Locust&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> which is an open source tool used for creating a load test against NGINX:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-3" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Kubectl-Create-Deployment"
id="tabs-3-0-tab" data-toggle="tab" href="#tabs-3-0" role="tab" onclick="handleClick(&amp;#34;Kubectl-Create-Deployment&amp;#34;);"
aria-controls="tabs-3-0" aria-selected="true">
Kubectl Create Deployment
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Kubectl-Create-Deployment-Output"
id="tabs-3-1-tab" data-toggle="tab" href="#tabs-3-1" role="tab" onclick="handleClick(&amp;#34;Kubectl-Create-Deployment-Output&amp;#34;);"
aria-controls="tabs-3-1" aria-selected="false">
Kubectl Create Deployment Output
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-3-content">&lt;div class="tab-pane fade show active"
id="tabs-3-0" role="tabpanel" aria-labelled-by="tabs-3-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl create -f locust-deployment.yaml&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-3-1" role="tabpanel" aria-labelled-by="tabs-3-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">deployment.apps/nginx-loadgenerator created
service/nginx-loadgenerator created&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;p>Validate the deployment has been successful and that the Locust and NGINX pods are running.&lt;/p>
&lt;p>If you have the Splunk UI open you should see new Pods being started and containers being deployed.&lt;/p>
&lt;p>It should only take around 20 seconds for the pods to transition into a Running state. In the Splunk UI you will have a cluster that looks like below:&lt;/p>
&lt;p>&lt;img src="../../../images/cluster.png" alt="back to Cluster">&lt;/p>
&lt;p>If you select the &lt;strong>WORKLOADS&lt;/strong> tab again you will now see that there is a new ReplicaSet and a deployment added for NGINX:&lt;/p>
&lt;p>&lt;img src="../../../images/k8s-workloads-nginx.png" alt="NGINX loaded">&lt;/p>
&lt;hr>
&lt;p>Let&amp;rsquo;s validate this in your shell as well:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-4" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Kubectl-Get-Pods"
id="tabs-4-0-tab" data-toggle="tab" href="#tabs-4-0" role="tab" onclick="handleClick(&amp;#34;Kubectl-Get-Pods&amp;#34;);"
aria-controls="tabs-4-0" aria-selected="true">
Kubectl Get Pods
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Kubectl-Get-Pods-Output"
id="tabs-4-1-tab" data-toggle="tab" href="#tabs-4-1" role="tab" onclick="handleClick(&amp;#34;Kubectl-Get-Pods-Output&amp;#34;);"
aria-controls="tabs-4-1" aria-selected="false">
Kubectl Get Pods Output
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-4-content">&lt;div class="tab-pane fade show active"
id="tabs-4-0" role="tabpanel" aria-labelled-by="tabs-4-0-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">kubectl get pods&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-4-1" role="tabpanel" aria-labelled-by="tabs-4-1-tab">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">NAME READY STATUS RESTARTS AGE
splunk-otel-collector-k8s-cluster-receiver-77784c659c-ttmpk 1/1 Running 0 9m19s
splunk-otel-collector-agent-249rd 1/1 Running 0 9m19s
svclb-nginx-vtnzg 1/1 Running 0 5m57s
nginx-7b95fb6b6b-7sb9x 1/1 Running 0 5m57s
nginx-7b95fb6b6b-lnzsq 1/1 Running 0 5m57s
nginx-7b95fb6b6b-hlx27 1/1 Running 0 5m57s
nginx-7b95fb6b6b-zwns9 1/1 Running 0 5m57s
svclb-nginx-loadgenerator-nscx4 1/1 Running 0 2m20s
nginx-loadgenerator-755c8f7ff6-x957q 1/1 Running 0 2m20s&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2 id="3-run-locust-load-test">3. Run Locust load test&lt;/h2>
&lt;p>Locust, an open source load generator, is available on port 8080 of the EC2 instance&amp;rsquo;s IP address. Open a new tab in your web browser and go to &lt;code>http://{==EC2-IP==}:8080/&lt;/code>, you will then be able to see the Locust running.&lt;/p>
&lt;p>&lt;img src="../../../images/nginx-locust.png" alt="Locust">&lt;/p>
&lt;p>Set the &lt;strong>Spawn rate&lt;/strong> to be 2 and click &lt;strong>Start Swarming&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="../../../images/nginx-locust-spawn-rate.png" alt="Locust Spawn Rate">&lt;/p>
&lt;p>This will start a gentle continuous load on the application.&lt;/p>
&lt;p>&lt;img src="../../../images/nginx-locust-statistics.png" alt="Locust Statistics">&lt;/p>
&lt;p>As you can see from the above screenshot, most of the calls will report a fail, this is expected, as we have not yet deployed the application behind it, however NGINX is reporting on your attempts and you should be able to see those metrics.&lt;/p>
&lt;p>Validate you are seeing those metrics in the UI by selecting &lt;strong>Dashboards → Built-in Dashboard Groups → NGINX → NGINX Servers&lt;/strong>. Using the &lt;strong>Overrides&lt;/strong> filter on &lt;code>k8s.cluster.name:&lt;/code>, find the name of your cluster as returned by &lt;code>echo $(hostname)-k3s-cluster&lt;/code> in the terminal.&lt;/p>
&lt;p>&lt;img src="../../../images/nginx-dashboard.png" alt="NGINX Dashboard">&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>A ConfigMap is an API object used to store non-confidential data in key-value pairs. Pods can consume ConfigMaps as environment variables, command-line arguments, or as configuration files in a volume. A ConfigMap allows you to decouple environment-specific configuration from your container images, so that your applications are easily portable.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://locust.io/" target="_blank">What is Locust?&lt;/a>
&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item></channel></rss>